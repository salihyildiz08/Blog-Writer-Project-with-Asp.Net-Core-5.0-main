#pragma checksum "C:\Users\mustafa\Desktop\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a81e6f02f54f764033361bf744d485b54412bfb7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mustafa\Desktop\CoreDemo\CoreDemo\Areas\Admin\Views\_ViewImports.cshtml"
using CoreDemo.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mustafa\Desktop\CoreDemo\CoreDemo\Areas\Admin\Views\_ViewImports.cshtml"
using CoreDemo.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a81e6f02f54f764033361bf744d485b54412bfb7", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b881055197282d0a2ab51004156381e82f1e1fbc", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\mustafa\Desktop\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Writers Ajax Operation</h1>
<br />
<button type=""button"" id=""btngetlist"" class=""btn btn-outline-primary"">Writer List</button>
<button type=""button"" id=""btngetbyid"" class=""btn btn-outline-success"">Writer Bring</button>
<button type=""button"" id=""btnaddwriter"" class=""btn btn-outline-info"">Writer Add</button>
<button type=""button"" id=""btndeletewriter"" class=""btn btn-outline-danger"">Writer Delete</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-outline-warning"">Writer Update</button>
<br />
<br />
<div id=""writerlist"">
    <h3>Buraya Yazarlar gelecek</h3>
</div>
<br />
<div id=""writerget"">
    <h3>Buraya Yazarlar çağırma</h3>

</div>
<br />
<div>
    <input type=""text"" id=""writerid"" placeholder=""Yazar Id değeri gir"" class=""form-control"" />
</div>
<br />
<div>
    <h3>Buraya Yazarlar ekeleme alanı</h3>

    <input type=""text"" class=""form-control"" id=""txtwriter"" placeholder=""Writer ID"" />
    <br />
    <input type=""text"" class=""form-control"" id=""txtwriterna"" placeh");
            WriteLiteral(@"older=""Writer Name"" />
</div>
<br />
<div>
    <h3>Buraya Yazarlar silinecek</h3>

    <input type=""text"" class=""form-control"" id=""txtid"" placeholder=""Delete Writer ID"" />

</div>
<br />
<dv>
    <h3>Update Writer</h3>
    <input type=""text"" id=""txtid1"" class=""form-contorl"" placeholder=""Update ID"" />
    <input type=""text"" id=""txtwritername"" class=""form-contorl"" placeholder=""Update Name"" />
</dv>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btngetlist"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""get"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(w);
                    let tablehtml = ""<table class=table table-bordered> <tr><th>Writer Id</th> <th>Writer Name</th></tr>"";
                    $.each(w, (index, value) => {
                        tablehtml += `<tr><td>${value.Id}</td><td>${value.Name}</td></tr>`
                    });
                    tablehtml += ""</table>"";
                    $(""#writerlist"").html(tablehtml);
                }
            });
        });

        $(""#btngetbyid"").click(x => {
            let id = $(""#writerid"").val();
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
      ");
                WriteLiteral(@"          type: ""get"",
                url: ""/Admin/Writer/GetWriterByID"",
                data: { writerid: id },
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(w);

                    let getvalue = `<table class=table table-bordered> <tr><th>Writer Id</th><th>Writer Name</th></tr> <tr><td>${w.Id}</td><td>${w.Name}</td></tr></table>`;
                    $(""#writerget"").html(getvalue);
                }
            });
        });

        $(""#btnaddwriter"").click(function () {
            let writerr = {
                Id: $(""#txtwriter"").val(),
                Name: $(""#txtwriterna"").val()
            };
            $.ajax({
             
                type: ""post"",
                url: ""/Admin/Writer/AddWriter"",
                data: writerr,
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                    alert(""addd"");
                }
  ");
                WriteLiteral(@"          });
        });

        $(""#btndeletewriter"").click(x=>{
            let id = $(""#txtid"").val();

            $.ajax({
                url: ""/Admin/Writer/DeleteWriter/"",
                type:""post"",
                dataType:""json"",
                success: function (func) {
                    alert(""delete"");
                }

            });
        });

        $(""#btnupdatewriter"").click(function(){
            let writer={
                Id: $(""#txtid1"").val(),
                Name: $(""#txtwritername"").val()
            };
            $.ajax({
                type:""post"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data:writer,
                success:function(func){
                    alert(""Update "");
                }
            });
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
